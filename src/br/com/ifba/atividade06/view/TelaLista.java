/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JFrame.java to edit this template
 */
package br.com.ifba.atividade06.view;

import java.util.Arrays;
import javax.swing.DefaultListModel;

/**
 *
 * @author PedroLucas
 */
public class TelaLista extends javax.swing.JFrame {    
    /**
     * Creates new form TelaLista
     */
    /*
    * Criação dos componetes da lista e auxiliar para selecionar posição
    */
    int[] vetor = new int[10];
    DefaultListModel lista = new DefaultListModel();
    int numeroSelecionado;
    
    public TelaLista() {
        initComponents();
        initLista();
    }
    /**
    * Inicializa o vetor com zeros e preenche o modelo de lista com os valores do vetor.
    */
    public void initLista() {
        Arrays.fill(vetor, 0);
        for (int num : vetor) {
            lista.addElement(num);
        }
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        spnValor = new javax.swing.JSpinner();
        btnAdicionar = new javax.swing.JButton();
        jScrollPane1 = new javax.swing.JScrollPane();
        listOrdem = new javax.swing.JList<>();
        lblVetor = new javax.swing.JLabel();
        lblPosicaoAtual = new javax.swing.JLabel();
        btnRemover = new javax.swing.JButton();
        btnOrdenar = new javax.swing.JButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setResizable(false);

        spnValor.setFont(new java.awt.Font("Times New Roman", 0, 14)); // NOI18N

        btnAdicionar.setFont(new java.awt.Font("Times New Roman", 0, 14)); // NOI18N
        btnAdicionar.setText("Adicionar");
        btnAdicionar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnAdicionarActionPerformed(evt);
            }
        });

        listOrdem.setFont(new java.awt.Font("Times New Roman", 0, 14)); // NOI18N
        listOrdem.setModel(lista);
        listOrdem.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                listOrdemMouseClicked(evt);
            }
        });
        jScrollPane1.setViewportView(listOrdem);

        lblVetor.setFont(new java.awt.Font("Times New Roman", 0, 14)); // NOI18N
        lblVetor.setText("Vetor");

        lblPosicaoAtual.setFont(new java.awt.Font("Times New Roman", 0, 14)); // NOI18N
        lblPosicaoAtual.setText("[ 0 ]");

        btnRemover.setFont(new java.awt.Font("Times New Roman", 0, 14)); // NOI18N
        btnRemover.setText("Remover");
        btnRemover.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnRemoverActionPerformed(evt);
            }
        });

        btnOrdenar.setFont(new java.awt.Font("Times New Roman", 0, 14)); // NOI18N
        btnOrdenar.setText("Ordenar");
        btnOrdenar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnOrdenarActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(spnValor, javax.swing.GroupLayout.PREFERRED_SIZE, 70, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(btnRemover, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(btnAdicionar, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(btnOrdenar, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addGap(51, 51, 51)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addGroup(layout.createSequentialGroup()
                        .addGap(9, 9, 9)
                        .addComponent(lblVetor)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(lblPosicaoAtual, javax.swing.GroupLayout.PREFERRED_SIZE, 50, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 135, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(spnValor, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(btnAdicionar)
                    .addComponent(lblVetor)
                    .addComponent(lblPosicaoAtual))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 241, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(btnRemover)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(btnOrdenar)))
                .addContainerGap())
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    /**
    * Manipula o clique do mouse e atualiza o label com a posição selecionada.
    * Este método é chamado quando o usuário clica em um item na lista.
    * Ele armazena o índice do item selecionado na variável e exibe essa posição no rótulo
    *
    * @param evt o evento de clique do mouse
    */
    private void listOrdemMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_listOrdemMouseClicked
        // TODO add your handling code here:
        numeroSelecionado = listOrdem.getSelectedIndex();
        lblPosicaoAtual.setText("[ " + numeroSelecionado + " ]");
    }//GEN-LAST:event_listOrdemMouseClicked
    
    /**
    * Manipula o evento de clique do botão "Adicionar" para atualizar o vetor e a lista exibida.
    * Este método atualiza o valor do componente no array. Em seguida, limpa todos os            
    * elementos do modelo de lista e preenche com os valores atualizados
    * 
    * @param evt o evento de ação gerado pelo clique no botão "Adicionar"
    */
    private void btnAdicionarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnAdicionarActionPerformed
        // TODO add your handling code here:
        vetor[numeroSelecionado] = Integer.parseInt(spnValor.getValue().toString());
        lista.removeAllElements();
        for (int num : vetor) {
            lista.addElement(num);
        }
    }//GEN-LAST:event_btnAdicionarActionPerformed

    /**
    * Remove o valor na posição selecionada do vetor e atualiza a lista.
    * Define o valor da posição como 0 e preenche a lista com os valores atualizados do vetor.
    *
    * @param evt o evento de ação gerado pelo clique no botão "Remover"
    */
    private void btnRemoverActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnRemoverActionPerformed
        // TODO add your handling code here:
        vetor[numeroSelecionado] = 0;
        lista.removeAllElements();
        for (int num : vetor) {
            lista.addElement(num);
        }
    }//GEN-LAST:event_btnRemoverActionPerformed

    /**
    * Ordena os valores do vetor e atualiza a lista exibida.
    * O método ordena os elementos do vetor e, em seguida,
    * a lista com os valores ordenados.
    *
    * @param evt o evento de ação gerado pelo clique no botão "Ordenar"
    */
    private void btnOrdenarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnOrdenarActionPerformed
        // TODO add your handling code here:
        Arrays.sort(vetor);
        lista.removeAllElements();
        for (int num : vetor) {
            lista.addElement(num);
        }
    }//GEN-LAST:event_btnOrdenarActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(TelaLista.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(TelaLista.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(TelaLista.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(TelaLista.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new TelaLista().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btnAdicionar;
    private javax.swing.JButton btnOrdenar;
    private javax.swing.JButton btnRemover;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JLabel lblPosicaoAtual;
    private javax.swing.JLabel lblVetor;
    private javax.swing.JList<String> listOrdem;
    private javax.swing.JSpinner spnValor;
    // End of variables declaration//GEN-END:variables
}
